spring:
  application:
    name: gateway-service  # Name of the Spring Boot application, identifying it as the API Gateway service

  main:
    web-application-type: reactive  # Specifies that the application is reactive (using Spring WebFlux for reactive programming)

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # Enables the service discovery locator, allowing the gateway to dynamically route requests based on service discovery
          lower-case-service-id: true  # Ensures the service IDs are converted to lowercase in the routing configuration

      globalcors:
        add-to-simple-url-handler-mapping: true  # Adds CORS mappings to Springâ€™s SimpleUrlHandlerMapping
        corsConfigurations:
          '[/**]':  # Applies the CORS settings globally to all paths
            allowedOrigins: "*"  # Allows all origins (cross-origin requests from any source)
            allowedHeaders: "*"  # Allows all headers in the requests
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH  # Specifies the allowed HTTP methods for CORS requests

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin  # Removes duplicate CORS headers from the response

    config:
      discovery:
        enabled: true  # Enables service discovery for the config client, allowing it to fetch configurations from Eureka
        service-id: config-server  # Specifies the service ID of the config server from Eureka registry

      name: gateway-service  # Defines the name of the service for the config client
      fail-fast: true  # Ensures the application fails quickly if the configuration cannot be retrieved
      retry:
        initial-interval: 3000  # The initial interval between retry attempts, in milliseconds
        multiplier: 1.3  # Multiplier for the retry interval (e.g., the interval will grow by 1.3 times after each attempt)
        max-interval: 20000  # Maximum interval between retry attempts, in milliseconds
        max-attempts: 20  # The maximum number of retry attempts

  config:
    import: "optional:configserver:"  # Imports configurations from the config server (optional, allows fallback)

  jpa:
    hibernate:
      ddl-auto: update  # Hibernate will automatically update the database schema
    show-sql: true  # Enables logging of SQL statements for JPA

server:
  port: 8989  # Specifies the port on which the Gateway service will run

eureka:
  instance:
    prefer-ip-address: true  # Eureka will register the instance using its IP address instead of its hostname
  client:
    registry-fetch-interval-seconds: 5  # Specifies the interval (in seconds) at which the Eureka client will refresh the registry

management:
  endpoints:
    web:
      exposure:
        include: "*"  # Exposes all management endpoints for monitoring and management (e.g., health checks, metrics)

  health:
    jms:
      enabled: false  # Disables JMS health checks as part of the health indicator
